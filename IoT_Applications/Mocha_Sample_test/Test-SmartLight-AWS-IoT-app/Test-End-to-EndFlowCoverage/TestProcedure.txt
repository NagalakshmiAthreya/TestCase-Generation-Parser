Identify the End-to-End Flow: 
First, clearly understand the entire flow from the sensor to lambda1(DeviceData_Lambda), lambda2(CheckLightDuration_lambda), and lambda3(Assert_Lambda). 
Identify the inputs and outputs at each stage of the flow (using EEFC).

Mock External Services: 
To isolate your tests from external services, such as AWS services, you should mock these services. 
Tools like aws-sdk-mock can help you mock AWS services' behavior. 
Mocking allows you to control the behavior of these services during testing.

Create Test Data: Generate or prepare test data that mimics the data produced by the sensor. 
This data should be used as the initial input to your end-to-end testing.

Write Integration Tests: For end-to-end testing, you'll need to write integration tests that cover the entire flow. 
Each test case should represent a complete scenario, from the sensor to the final Lambda function. 

Assertions and Validation: 
In each step of the end-to-end flow, you should validate the behavior of the component under test. 
Use assertions to check whether the components behave as expected based on the given input.

Run the Tests: Run the Mocha tests using the mocha command or your preferred test runner. 
Ensure that all the tests pass.

Refine and Expand Testing: 
As needed, refine your tests and expand the test scenarios to cover various conditions and edge cases in the end-to-end flow.


